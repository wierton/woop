# setting up the project
set script_dir [file dirname [info script]]
set rtl_dir    ${script_dir}/rtl
set lib_dir    $env(NOOP_HOME)/lib
set bd_dir     ${script_dir}/bd
set constr_dir ${script_dir}/constr
set data_dir   ${script_dir}/data

# update files generated by scripts
exec make -C $script_dir

# lib src files
if {$uncore eq "zedboard" || $uncore eq "Artix"} {
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/cache/icache_controller.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/cache/rams_sp_rf.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/perf/performance_counter.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/cache/dcache_controller.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/cache/bytewrite_sp_ram_rf.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/util/naive_axilite_bridge.v"]"
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/include/axi/config.vh"]"
	set_property is_global_include true [get_files "[file normalize "${lib_dir}/include/axi/config.vh"]"]
} else {
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/util/naive_to_sramlike.v"]"	
	add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/include/sramlike/config.vh"]"
	set_property is_global_include true [get_files "[file normalize "${lib_dir}/include/sramlike/config.vh"]"]
}
add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/include/axi.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/include/axis.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${lib_dir}/include/msg_if.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/scoreboard.vh"]"
set_property is_global_include true [get_files "[file normalize "${lib_dir}/include/axi.vh"]"]
set_property is_global_include true [get_files "[file normalize "${lib_dir}/include/axis.vh"]"]
set_property is_global_include true [get_files "[file normalize "${lib_dir}/include/msg_if.vh"]"]

# src files
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/msg_param.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/exception.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/decode.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/common.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/seg.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/flush.vh"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/reg_file.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/cp0.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/fmt.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/ifu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/next_pc.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/ifpcu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/idu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/decode_rom.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/isu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/sb.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/alu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/mdu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/lsu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/lspcu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/bru.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/wbu.v"]"
add_files -norecurse -fileset sources_1 "[file normalize "${rtl_dir}/core_top.v"]"

# Block Designs
if { $uncore eq "zedboard" || $uncore eq "Artix"} {
	source ${bd_dir}/noop-axi/noop.tcl
} else {
	source ${bd_dir}/noop-sramlike/noop.tcl
}
save_bd_design
close_bd_design $design_name
set_property synth_checkpoint_mode Hierarchical [get_files *${design_name}.bd]
